#include <iostream>
#include <vector>
#include <queue>
#include <functional>
using namespace std;

// Function to find k largest elements using a min-heap
vector<int> kLargestElements(vector<int>& arr, int k) {
    // Min-heap (priority_queue by default is max-heap, so we use greater<int> to make it min-heap)
    priority_queue<int, vector<int>, greater<int>> minHeap;

    // Traverse through the array
    for (int i = 0; i < arr.size(); i++) {
        if (minHeap.size() < k) {
            minHeap.push(arr[i]);
        } else if (arr[i] > minHeap.top()) {
            minHeap.pop();   // Remove the smallest element (top of the min-heap)
            minHeap.push(arr[i]);
        }
    }

    // Store result
    vector<int> result;
    while (!minHeap.empty()) {
        result.push_back(minHeap.top());
        minHeap.pop();
    }

    return result;
}

// Function to find k smallest elements using a max-heap
vector<int> kSmallestElements(vector<int>& arr, int k) {
    // Max-heap (priority_queue by default is max-heap)
    priority_queue<int> maxHeap;

    // Traverse through the array
    for (int i = 0; i < arr.size(); i++) {
        if (maxHeap.size() < k) {
            maxHeap.push(arr[i]);
        } else if (arr[i] < maxHeap.top()) {
            maxHeap.pop();   // Remove the largest element (top of the max-heap)
            maxHeap.push(arr[i]);
        }
    }

    // Store result
    vector<int> result;
    while (!maxHeap.empty()) {
        result.push_back(maxHeap.top());
        maxHeap.pop();
    }

    return result;
}

int main() {
    int n, k;
    cout << "Enter the number of elements in the array: ";
    cin >> n;

    vector<int> arr(n);
    cout << "Enter the elements of the array: ";
    for (int i = 0; i < n; i++) {
        cin >> arr[i];
    }

    cout << "Enter the value of k: ";
    cin >> k;

    // Find k largest elements
    vector<int> largest = kLargestElements(arr, k);
    cout << "The " << k << " largest elements are: ";
    for (int i = 0; i < largest.size(); i++) {
        cout << largest[i] << " ";
    }
    cout << endl;

    // Find k smallest elements
    vector<int> smallest = kSmallestElements(arr, k);
    cout << "The " << k << " smallest elements are: ";
    for (int i = 0; i < smallest.size(); i++) {
        cout << smallest[i] << " ";
    }
    cout << endl;

    return 0;
}
