#include <iostream>
#include <vector>
#include <algorithm>
using namespace std;


int maxNonAdjacentSum(vector<int>& nums) {
    int n = nums.size();
    
    if (n == 0) return 0; 
    if (n == 1) return nums[0]; 
    
 
    int prev2 = 0;
    int prev1 = nums[0];


    for (int i = 1; i < n; i++) {
        int includeCurrent = nums[i] + prev2; 
        int excludeCurrent = prev1; 
        int current = max(includeCurrent, excludeCurrent);

        
        prev2 = prev1;
        prev1 = current;
    }

    return prev1;
}

int main() {
    int n;
    cout << "Enter the number of elements in the array: ";
    cin >> n;

    vector<int> nums(n);
    cout << "Enter the elements of the array: ";
    for (int i = 0; i < n; i++) {
        cin >> nums[i];
    }

    
    int result = maxNonAdjacentSum(nums);
    cout << "Maximum sum with no two adjacent elements: " << result << endl;

    return 0;
}
